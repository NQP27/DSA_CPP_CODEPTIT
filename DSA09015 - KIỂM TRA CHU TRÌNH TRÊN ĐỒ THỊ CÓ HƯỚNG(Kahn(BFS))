#include <bits/stdc++.h>
#define N 100000
using namespace std;
#define ll long long
vector<int> adj[1001];
int degree[1001];
int n, m;
bool bfs()
{
    queue<int> q;
    for (int i = 1; i <= n; i++)
    {
        if (degree[i] == 0)
        {
            q.push(i);
        }
    }
    int cnt = 0;
    while (!q.empty())
    {
        int v = q.front();
        q.pop();
        cnt++;
        for (int i = 0; i < adj[v].size(); i++)
        {
            degree[adj[v][i]]--;
            if (degree[adj[v][i]] == 0)
            {
                q.push(adj[v][i]);
            }
        }
    }
    if (cnt == n)
    {
        return 0;
    }
    else
    {
        return 1;
    }
}
int check()
{
    if (bfs())
    {
        return 1;
    }
    return 0;
}
int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
    int t;
    cin >> t;
    while (t--)
    {
        cin >> n >> m;
        for (int i = 1; i <= 1000; i++)
        {
            adj[i].clear();
        }
        memset(degree, 0, sizeof(degree));
        for (int i = 0; i < m; i++)
        {
            int x, y;
            cin >> x >> y;
            adj[x].push_back(y);
            degree[y]++;
        }
        if (check())
        {
            cout << "YES\n";
        }
        else
        {
            cout << "NO\n";
        }
    }
    system("pause");
    return 0;
}
