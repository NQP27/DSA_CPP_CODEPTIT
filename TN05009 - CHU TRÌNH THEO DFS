#include <bits/stdc++.h>
#define N 100000
using namespace std;
#define ll long long
bool visited[1001];
vector<int> adj[1001];
int parent[1001];
int n, m, st, en;

bool dfs(int u)
{
    visited[u] = true;
    for (int i = 0; i < adj[u].size(); i++)
    {
        if (!visited[adj[u][i]])
        {
            parent[adj[u][i]] = u;
            if (dfs(adj[u][i]))
            {
                return true;
            }
        }
        else if (adj[u][i] != parent[u] and adj[u][i] == 1)
        {
            st = adj[u][i];
            en = u;
            return true;
        }
    }
    // for (int v : adj[u])
    // {
    //     if (!visited[v])
    //     {
    //         parent[v] = u;
    //         if (dfs(v))
    //         {
    //             return true;
    //         }
    //     }
    //     else if (v != parent[u] and v == 1)
    //     {
    //         en = u;
    //         st = v;
    //         return true;
    //     }
    // }
    return false;
}

int check()
{
    return dfs(1);
}

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
    int t;
    cin >> t;
    while (t--)
    {
        cin >> n >> m;
        for (int i = 1; i <= 1000; i++)
        {
            adj[i].clear();
        }
        memset(visited, false, sizeof(visited));
        memset(parent, 0, sizeof(parent));
        for (int i = 0; i < m; i++)
        {
            int x, y;
            cin >> x >> y;
            adj[x].push_back(y);
            adj[y].push_back(x);
        }
        for (int i = 1; i <= 1000; i++)
        {
            sort(adj[i].begin(), adj[i].end());
        }
        if (check())
        {
            vector<int> cycle;
            cycle.push_back(st);
            while (en != st)
            {
                cycle.push_back(en);
                en = parent[en];
            }
            cycle.push_back(st);
            for (int i = cycle.size() - 1; i >= 0; i--)
            {
                cout << cycle[i] << " ";
            }
            cout << endl;
        }
        else
        {
            cout << "NO\n";
        }
    }
    system("pause");
    return 0;
}
